head	1.9;
access;
symbols;
locks
	jalfredo:1.9; strict;
comment	@# @;


1.9
date	2017.08.18.00.30.18;	author jalfredo;	state Exp;
branches;
next	1.8;

1.8
date	2017.08.17.21.24.23;	author jalfredo;	state Exp;
branches;
next	1.7;

1.7
date	2017.08.15.22.32.02;	author jalfredo;	state Exp;
branches;
next	1.6;

1.6
date	2017.08.15.00.11.33;	author jalfredo;	state Exp;
branches;
next	1.5;

1.5
date	2017.08.14.22.48.48;	author jalfredo;	state Exp;
branches;
next	1.4;

1.4
date	2017.08.12.00.52.19;	author jalfredo;	state Exp;
branches;
next	1.3;

1.3
date	2017.08.11.02.20.25;	author jalfredo;	state Exp;
branches;
next	1.2;

1.2
date	2017.08.11.00.07.54;	author jalfredo;	state Exp;
branches;
next	1.1;

1.1
date	2017.08.09.23.35.35;	author jalfredo;	state Exp;
branches;
next	;


desc
@@


1.9
log
@*** empty log message ***
@
text
@/**
 * Created by yzharchuk on 8/1/2017.
 */

package client.oddc.fla.com.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.sql.Timestamp;
import java.util.Date;

import client.oddc.fla.com.utilities.Utilities;

public class ContinuousData
{
    @@JsonProperty("id")
    public String id;
    @@JsonProperty("sessionID")
    public String sessionID;
    @@JsonProperty("vehicleID")
    public String vehicleID;
    @@JsonProperty("driverID")
    public String driverID;
    @@JsonProperty("submitterID")
    public String submitterID;

    @@JsonProperty("gpsTimestamp")
    public Timestamp gpsTimestamp;
    @@JsonProperty("longitude")
    public double longitude;
    @@JsonProperty("latitude")
    public double latitude;
    @@JsonProperty("speed")
    public double speed;
    @@JsonProperty("speedDetectionType")
    public int speedDetectionType;

    @@JsonProperty("accelerationTimeStamp")
    public Timestamp accelerationTimeStamp;
    @@JsonProperty("accelerationX")
    public double accelerationX;
    @@JsonProperty("accelerationY")
    public double accelerationY;
    @@JsonProperty("accelerationZ")
    public double accelerationZ;

    @@JsonProperty("gShockTimeStamp")
    public Timestamp gShockTimeStamp;
    @@JsonProperty("gShockEvent")
    public boolean gShockEvent;
    @@JsonProperty("gShockEventThreshold")
    public double gShockEventThreshold;

    @@JsonProperty("fcwTimeStamp")
    public Timestamp fcwTimeStamp;
    @@JsonProperty("fcwExistFV")
    public boolean fcwExistFV;
    @@JsonProperty("fcwCutIn")
    public boolean fcwCutIn;
    @@JsonProperty("fcwDistanceToFV")
    public double fcwDistanceToFV;
    @@JsonProperty("fcwRelativeSpeedToFV")
    public double fcwRelativeSpeedToFV;
    @@JsonProperty("fcwEvent")
    public boolean fcwEvent;
    @@JsonProperty("fcwEventThreshold")
    public double fcwEventThreshold;

    @@JsonProperty("ldwTimeStamp")
    public Timestamp ldwTimeStamp;
    @@JsonProperty("ldwDistanceToLeftLane")
    public double ldwDistanceToLeftLane;
    @@JsonProperty("ldwDistanceToRightLane")
    public double ldwDistanceToRightLane;
    @@JsonProperty("ldwEvent")
    public boolean ldwEvent;
    @@JsonProperty("mediaURI")
    public String mediaURI;

    public static ContinuousData createDummyContinuousData()
    {
        ContinuousData data = new ContinuousData();
        data.id = Utilities.generateUUIDString();
        data.sessionID = Utilities.generateUUIDString();
        data.vehicleID = " VINREITWOIASDFN";
        data.driverID = "B4979695";
        data.submitterID = "Fujitsu Labs";

        data.gpsTimestamp = new Timestamp(new Date().getTime());
        data.longitude = 0.2341346;
        data.latitude = 22.340953;
        data.speed = 80.9;
        data.speedDetectionType = 4;

        data.accelerationTimeStamp = new Timestamp(new Date().getTime());
        data.accelerationX = 45;
        data.accelerationY = 3;
        data.accelerationZ = 74;

        data.gShockTimeStamp = new Timestamp(new Date().getTime());
        data.gShockEvent = true;
        data.gShockEventThreshold = 33;
        data.fcwTimeStamp = new Timestamp(new Date().getTime());
        data.fcwExistFV = true;
        data.fcwCutIn = true;
        data.fcwDistanceToFV = 3.3;
        data.fcwRelativeSpeedToFV = 4.4;
        data.fcwEvent = true;
        data.fcwEventThreshold = 59;

        data.ldwTimeStamp = new Timestamp(new Date().getTime());
        data.ldwDistanceToLeftLane = 5.5;
        data.ldwDistanceToRightLane = 2.2;
        data.ldwEvent = true;
        data.mediaURI = "some/media/uri";
        return data;
    }
}
@


1.8
log
@*** empty log message ***
@
text
@d12 2
d16 2
a17 2
    @@JsonProperty("messageID")
    public int messageID;
d51 2
a52 1
    public double gShockEventThreshold; // might be a parameter from FLA
a76 1

d79 39
@


1.7
log
@*** empty log message ***
@
text
@d49 1
a49 1
    //public double gShockEventThreshold; // might be a parameter from FLA
@


1.6
log
@*** empty log message ***
@
text
@d74 1
@


1.5
log
@*** empty log message ***
@
text
@a75 39

    public static ContinuousData createDummyContinuousData()
    {
        ContinuousData data = new ContinuousData();
        data.messageID = 24;
        data.sessionID = "qwerq52342";
        data.vehicleID = " VINREITWOIASDFN";
        data.driverID = "B4979695";
        data.submitterID = "Fujitsu Labs";

        data.gpsTimestamp = new Timestamp(new Date().getTime());
        data.longitude = 0.2341346;
        data.latitude = 22.340953;
        data.speed = 80.9;
        data.speedDetectionType = 4;

        data.accelerationTimeStamp = new Timestamp(new Date().getTime());
        data.accelerationX = 45;
        data.accelerationY = 3;
        data.accelerationZ = 74;

        data.gShockTimeStamp = new Timestamp(new Date().getTime());
        data.gShockEvent = true;
        data.fcwTimeStamp = new Timestamp(new Date().getTime());
        data.fcwExistFV = true;
        data.fcwCutIn = true;
        data.fcwDistanceToFV = 3.3;
        data.fcwRelativeSpeedToFV = 4.4;
        data.fcwEvent = true;
        data.fcwEventThreshold = 59;

        data.ldwTimeStamp = new Timestamp(new Date().getTime());
        data.ldwDistanceToLeftLane = 5.5;
        data.ldwDistanceToRightLane = 2.2;
        data.ldwEvent = true;
        data.mediaURI = "/some/uri/location";

        return data;
    }
@


1.4
log
@*** empty log message ***
@
text
@d111 2
@


1.3
log
@*** empty log message ***
@
text
@d10 1
d76 37
@


1.2
log
@*** empty log message ***
@
text
@d1 74
a74 42
package com.fujitsu.fla.oddc;


public class ContinuousData {
        /*
        public int messageID;
        public String sessionID;
        public String driverID;
        public String submitterID;
        */
        public String vehicleID; // VIN
        public int timezone;

        public String gpsTimestamp; // from OS not GPS
        public float longitude;
        public float latitude;
        public float speed;
        public int speedDetectionType;

        public String accelerationTimeStamp; /* yyyy-MM-dd HH:mm:ss.SSS for SQLite */
        public float accelerationX;
        public float accelerationY;
        public float accelerationZ;

        public String gShockTimeStamp;
        public boolean gShockEvent;
        public float gShockEventThreshold; /* might be a parameter from FLA */

        public String fcwTimeStamp;
        public boolean fcwExistFV;
        public int fcwTimeToCollision;
        public float fcwDistanceToFV;
        /*public float fcwRelativeSpeedToFV;*/
        public boolean fcwEvent;
        public float fcwEventThreshold;

        public String ldwTimeStamp;
        public float ldwDistanceToLeftLane;
        public float ldwDistanceToRightLane;
        public boolean ldwEvent;

        public String mediaURI;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
package com.example.jalfredo.oddccallback;
@
